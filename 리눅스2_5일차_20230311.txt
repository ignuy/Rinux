#2023-03-11=======================

[root@localhost roror]# ls -l

[root@localhost roror]# umask
0022
[root@localhost roror]# cat /etc/bashrc | grep umask
    # By default, we want umask to get set. This sets it for non-login shell.
       umask 002
       umask 022
[root@localhost roror]# cat /etc/bashrc | grep profile
# Environment stuff goes in /etc/profile
# /etc/profile.d/ to make custom changes to your environment, as this
    # to your custom modification shell script in /etc/profile.d/ directory
    # Need to redefine pathmunge, it gets undefined at the end of /etc/profile
    # Only display echos from profile.d scripts if we are no login shell
    for i in /etc/profile.d/*.sh; do


[root@localhost roror]# umask
0022
[root@localhost roror]# umask -S
u=rwx,g=rx,o=rx

[root@localhost roror]# echo "cat /etc/passwd" > cmd.sh
[root@localhost roror]# umask
0022
[root@localhost roror]# ls -l ./cmd.sh
-rw-r--r--. 1 root root 16  3월 11 14:15 ./cmd.sh

-----------------------------------------

IPv4(32bit)
0.0.0.0 ~ 255.255.255.255
- 2진수
00000000.00000000.00000000.00000000  ~
11111111.11111111.11111111.11111111

0 : 호스트
1 : 네트워크

<서브넷마스크> 
-> 구역을 알수있음.
ex) 255.255.255.0
컴퓨터를 256대를 연결해서 사용가능하고
0 ~ 255
1 ~ 254

- 디폴트 서브넷 마스크
A 255.0.0.0
B 255.255.0.0
C 255.255.255.0

-> 예시

ip : 192.168.2.254
11111111.11111111.00000000.00000000 (2진수)
subnetmask : 255.255.0.0 (65536)
- 0 컴퓨터
192.168.0.0 ~ 192.168.255.255 (네트워크 범위)
	  
ip : 192.168.123.100
subnetmask : 255.255.0.0 (256)

11111111.11111111.11111111.00000000
ip			 | subnetmask	
ip 에서 1의 자리 값은 ? : 192.168.123.
ip 에서 0의 자리 값은 ? : 100 
(컴퓨터 하나당 하나의 값을 할당, 중복안됨)

192.168.123.0/24 (FREFIX, CIDR 표기법)
ip : 192.168.123

- SetUID(s)
- SetGID(s)
- Sticky bit(t)
---------------------------------

[root@localhost roror]# ls
cls     ls     test   공개      문서      비디오  서식
cmd.sh  permi  test1  다운로드  바탕화면  사진    음악
[root@localhost roror]# chmod 7777 ./cmd.sh
[root@localhost roror]# ls -l ./cmd.sh
-rwsrwsrwt. 1 root root 16  3월 11 14:15 ./cmd.sh
[root@localhost roror]# touch cmd1.sh
[root@localhost roror]# chmod 7666 ./cmd1.sh
[root@localhost roror]# ls -l ./cmd1.sh
-rwSrwSrwT. 1 root root 0  3월 11 15:08 ./cmd1.sh


[root@localhost roror]# vi back.c
-> back.c 안에 씀.

------- 내용추가 ------------

#include <stdio.h>
int main(){
        setuid(0);
        setgid(0);
        system("/usr/bin/bash");
}

------- 여기까지 ----------       

:wq (저장후 나가기)

[root@localhost roror]# gcc -o back back.c
bash: gcc: command not found...
Install package 'gcc' to provide command 'gcc'? [N/y] n
-> gcc (c 언어파일) 이 없다는 뜻, 깔면됨.

[root@localhost roror]# dnf install gcc -y
-> gcc 파일 까는 코드

[root@localhost roror]# ls
back    cls     cmd1.sh  permi  test1  다운로드  바탕화면  사진  음악
back.c  cmd.sh  ls       test   공개   문서      비디오    서식
[root@localhost roror]# ./back
[root@localhost roror]# exit
exit
[root@localhost roror]# ls 
(나가게 되면 $ 변해야하는데 안변함.)

-- 확인방법
>>>>>
[root@localhost roror]# ps -ef | grep bash
roror       6876    6828  0 12:22 pts/0    00:00:00 bash
root        9915    9902  0 14:08 pts/0    00:00:00 bash
root       40108    9915  0 15:19 pts/0    00:00:00 grep --color=auto bash
[root@localhost roror]# ./back

[root@localhost roror]# ps -ef | grep bash
roror       6876    6828  0 12:22 pts/0    00:00:00 bash
root        9915    9902  0 14:08 pts/0    00:00:00 bash
root       40114   40113  0 15:20 pts/0    00:00:00 /usr/bin/bash
root       40141   40114  0 15:20 pts/0    00:00:00 grep --color=auto bash
-> bash 가 하나더 실행됨.
(/usr/bin/bash 여기서 빠져나간거라 # 유지되있음)


[roror@localhost ~]$ su
암호:
[root@localhost roror]# 
[root@localhost roror]# 
[root@localhost roror]# /usr/bin/bash
[root@localhost roror]# exit
exit
[root@localhost roror]# exit
exit
[roror@localhost ~]$ ./back
[roror@localhost ~]$ exit
exit
[roror@localhost ~]$ 

----------------------------------------------

[root@localhost roror]# ls
back    cls     cmd1.sh  permi  test1  다운로드  바탕화면  사진  음악
back.c  cmd.sh  ls       test   공개   문서      비디오    서식
[root@localhost roror]# 
[root@localhost roror]# 
[root@localhost roror]# ls -l ./back
-rwxr-xr-x. 1 root root 25896  3월 11 15:17 ./back
[root@localhost roror]# chmod 4755 ./back
[root@localhost roror]# ls -l ./back
-rwsr-xr-x. 1 root root 25896  3월 11 15:17 ./back


[roror@localhost ~]$ 
[roror@localhost ~]$ ls
back    cls     cmd1.sh  permi  test1  다운로드  바탕화면  사진  음악
back.c  cmd.sh  ls       test   공개   문서      비디오    서식
[roror@localhost ~]$ cat /etc/shadow
cat: /etc/shadow: 허가 거부
[roror@localhost ~]$ ./back
[root@localhost ~]#  (일반계정이 root계정으로 백도어가됨)
[root@localhost ~]# 


[root@localhost ~]# ls -l ./back
-rwsr-xr-x. 1 root root 25896  3월 11 15:17 ./back
[root@localhost ~]# exit
exit
[roror@localhost ~]$ ls -l ./back
-rwsr-xr-x. 1 root root 25896  3월 11 15:17 ./back
[roror@localhost ~]$ which passwd
/usr/bin/passwd
[roror@localhost ~]$ ls -l /usr/bin/passwd
-rwsr-xr-x. 1 root root 32656  5월 15  2022 /usr/bin/passwd


[root@localhost ~]# cd /
[root@localhost /]# ls
afs     bin   dev  home  lib64  mnt  proc  run   srv  tmp  var
backup  boot  etc  lib   media  opt  root  sbin  sys  usr
[root@localhost /]# 
[root@localhost /]# ls -ld ./tmp
drwxrwxrwt. 18 root root 4096  3월 11 15:36 ./tmp
[root@localhost /]# ls -ld ./tmp
drwxrwxrwt. 18 root root 4096  3월 11 15:36 ./tmp
[root@localhost /]# ls /home
roror
[root@localhost /]# useradd user
[root@localhost /]# passwd user
user 사용자의 비밀 번호 변경 중
새 암호:
잘못된 암호: 암호는 8 개의 문자 보다 짧습니다
새 암호 재입력:
passwd: 모든 인증 토큰이 성공적으로 업데이트 되었습니다.
[root@localhost /]# 
[root@localhost /]# 
[root@localhost /]# 
[root@localhost /]# mkdir -m 1777 /temp
[root@localhost /]# ls -ld /temp
drwxrwxrwt. 2 root root 6  3월 11 15:37 /temp


[roror@localhost ~]$ cd /temp
[roror@localhost temp]$ touch roror.txt
[roror@localhost temp]$ ls -l
합계 0
-rw-rw-r--. 1 roror roror 0  3월 11 15:40 roror.txt
[roror@localhost temp]$ su user
암호:
[user@localhost temp]$ cp /etc/passwd ./pwd
[user@localhost temp]$ touch user.txt
[user@localhost temp]$ ls -l
합계 4
-rw-r--r--. 1 user  user  2131  3월 11 15:40 pwd
-rw-rw-r--. 1 roror roror    0  3월 11 15:40 roror.txt
-rw-rw-r--. 1 user  user     0  3월 11 15:40 user.txt

--- 실습 ----

#mkdir -m 777 /temp2
roror $ cp /etc/passwd /temp2
user $ cp /etc/passwd /temp2/pwd 
- 삭제가능

- 삭제 (roror 계정으로 삭제가능)

[roror@localhost /]$ cd /temp
[roror@localhost temp]$ 
[roror@localhost temp]$ 
[roror@localhost temp]$ 
[roror@localhost temp]$ su
암호:
[root@localhost temp]# mkdir -m 777 /temp2
[root@localhost temp]# exit
exit
[roror@localhost temp]$ cp /etc/passwd /temp2
[roror@localhost temp]$ su user
암호:
[user@localhost temp]$ cp /etc/passwd /temp2/pwd
[user@localhost temp]$ cd /temp2
[user@localhost temp2]$ ls -l
합계 8
-rw-r--r--. 1 roror roror 2131  3월 11 15:43 passwd
-rw-r--r--. 1 user  user  2131  3월 11 15:44 pwd
[user@localhost temp2]$ pwd
/temp2


[user@localhost temp2]$ ls -ld /temp /temp2
drwxrwxrwt. 2 root root 50  3월 11 15:40 /temp
drwxrwxrwx. 2 root root 31  3월 11 15:44 /temp2
[user@localhost temp2]$ pwd
/temp2
[user@localhost temp2]$ ls -l
합계 8
-rw-r--r--. 1 roror roror 2131  3월 11 15:43 passwd
-rw-r--r--. 1 user  user  2131  3월 11 15:44 pwd
[user@localhost temp2]$ rm ./passwd ./pwd
rm: remove write-protected 일반 파일 './passwd'? y
[user@localhost temp2]$ ls
[user@localhost temp2]$ cd /temp
[user@localhost temp]$ ls -l
합계 4
-rw-r--r--. 1 user  user  2131  3월 11 15:40 pwd
-rw-rw-r--. 1 roror roror    0  3월 11 15:40 roror.txt
-rw-rw-r--. 1 user  user     0  3월 11 15:40 user.txt
[user@localhost temp]$ rm -rf ./passwd ./pwd
[user@localhost temp]$ ls -l
합계 0
-rw-rw-r--. 1 roror roror 0  3월 11 15:40 roror.txt
-rw-rw-r--. 1 user  user  0  3월 11 15:40 user.txt
[user@localhost temp]$ 
[user@localhost temp]$ rm user.txt
[user@localhost temp]$ ls
roror.txt
[user@localhost temp]$ ls -l
합계 0
-rw-rw-r--. 1 roror roror 0  3월 11 15:40 roror.txt

[user@localhost temp]$ cd /
[user@localhost /]$ ls
afs     bin   dev  home  lib64  mnt  proc  run   srv  temp   tmp  var
backup  boot  etc  lib   media  opt  root  sbin  sys  temp2  usr
[user@localhost /]$ ls -l ./test2
ls: cannot access './test2': 그런 파일이나 디렉터리가 없습니다
[user@localhost /]$ ls -ld /temp2
drwxrwxrwx. 2 root root 6  3월 11 15:45 /temp2

---- 실습2 -------

계정 : roror, user1, user2 생성
디렉토리 /backup 생성
-> 디렉토리 계정 roror, user1 은 읽고 쓰기 가능,
    user2 는 접근 금지

퍼미션변경 : chmod
chmod, usermod -a -G 기존그룹 추가그룹.

[roror@localhost ~]$ su
암호:
[root@localhost roror]# ls -ld /
dr-xr-xr-x. 21 root root 274  3월 11 15:43 /
[root@localhost roror]# mkdir /backup
mkdir: `/backup' 디렉토리를 만들 수 없습니다: 파일이 있습니다
[root@localhost roror]# 
[root@localhost roror]# 
[root@localhost roror]# rm -rf /backup
[root@localhost roror]# mkdir /backup
[root@localhost roror]# ll /backup
합계 0
[root@localhost roror]# ll -d /backup
drwxr-xr-x. 2 root root 6  3월 11 16:06 /backup
[root@localhost roror]# 
[root@localhost roror]# 
[root@localhost roror]# rm -rf /backup
[root@localhost roror]# exit
exit
[roror@localhost ~]$ mkdir /backup
mkdir: `/backup' 디렉토리를 만들 수 없습니다: 허가 거부

-------------------------------------------------

[roror@localhost ~]$ 
[roror@localhost ~]$ su
암호:
[root@localhost roror]# mkdir /backup
[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 root root 6  3월 11 16:11 /backup
(root 디렉토리 생성, / 권한 때문에)
- /backup 소유자(그룹포함)가 root 이므로 그룹추가를 하면
  보안상 위험하다.
# chown [계정명] : [그룹명] [파일또는 디렉토리]
# chown roror:roror /backup
(구분 : 사용하지만 . 도 가능하다)
# chown .roror /backup == # chown :roror /backup

[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 root root 6  3월 11 16:11 /backup
[root@localhost roror]# chown root:roror /backup
[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 root roror 6  3월 11 16:11 /backup
[root@localhost roror]# 
[root@localhost roror]# chown roror /backup
[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 roror roror 6  3월 11 16:11 /backup
[root@localhost roror]# chown root /backup
[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 root roror 6  3월 11 16:11 /backup
[root@localhost roror]# chown roror:roror /backup
[root@localhost roror]# chown :roror /backup
[root@localhost roror]# chown roror /backup
[root@localhost roror]# chown root:root /backup
[root@localhost roror]# ls -ld
drwx------. 16 roror roror 4096  3월 11 15:17 .
[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 root root 6  3월 11 16:11 /backup

# chgrp roror /backup
(그룹변경 명령어)

[root@localhost roror]# chgrp roror /backup
[root@localhost roror]# ls -ld /backup
drwxr-xr-x. 2 root roror 6  3월 11 16:11 /backup


# usermod -a -G roror user

[root@localhost roror]# usermod -a -G roror user
[root@localhost roror]# grep roror /etc/group
wheel:x:10:roror
roror:x:1000:user
(roror 그룹에 user 그룹을 추가)

[root@localhost roror]# chmod 770 /backup

# ls -ld /backup
[root@localhost roror]# ls -ld /backup
drwxrwx---. 2 root roror 6  3월 11 16:11 /backup

[root@localhost roror]# 
[root@localhost roror]# ls /home
roror  user
[root@localhost roror]# useradd user2
[root@localhost roror]# passwd user2
user2 사용자의 비밀 번호 변경 중
새 암호:
잘못된 암호: 암호는 8 개의 문자 보다 짧습니다
새 암호 재입력:
passwd: 모든 인증 토큰이 성공적으로 업데이트 되었습니다.
[root@localhost roror]# exit
exit
[roror@localhost ~]$ cd /backup
[roror@localhost backup]$ touch roror.txt
[roror@localhost backup]$ su user
암호:
su: 인증 실패
[roror@localhost backup]$ su user
암호:
[user@localhost backup]$ touch user.txt
[user@localhost backup]$ cd ..
[user@localhost /]$ ls
afs     bin   dev  home  lib64  mnt  proc  run   srv  temp   tmp  var
backup  boot  etc  lib   media  opt  root  sbin  sys  temp2  usr
[user@localhost /]$ 

[user@localhost /]$ su user2
암호:
[user2@localhost /]$ cd /backup
bash: cd: /backup: 허가 거부

- 실습
계정( roror, user, user2 )
디렉토리 /backup
 - 디렉토리 계정은 roror, user 은 읽고 쓰기 가능
 - user2는 접근 금지
tip : chmod, usermod -a -G 기존그룹 추가그룹

# chown 계정명:그룹명 파일 또는 디렉토리
# chown roror:roror /backup  (구분 : 사용하지만 . 도 가능하다)
# chwon :roror /backup
# chgrp roror /backup(그룹변경 명령어)

------------------------------------------------
# mkdir /backup
# ls -ld /backup
drwxr-xr-x. 2 root root 6  3월 11 16:11 /backup  ( root 디렉토리 생성, / 권한 때문에)
  - /backup 소유자(그룹포함)가 root 이므로 그룹추가를 하면 보안상 위험하다.
# chown root:roror /backup
# usermod -a -G roror user
# grep roro /etc/group
roror:x:1000:user     (roror 그룹에 user그룹을 추가)
# chmod 770 /backup
# ls -ld /backup
drwxrwx---. 2 root roror 6  3월 11 16:11 /backup

---------------------------------------------------------

[user2@localhost /]$ su
암호:
[root@localhost /]# 

putty(ssh client) --> Linux(ssh serve) 접속
SSH 데몬(프로세스명) 있어야 접속이 가능하다.
1) 데몬 확인 하는 방법 (# ps -ef | grep ssh)

[root@localhost /]# ps -ef | grep ssh
root        1130       1  0 12:08 ?        00:00:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups
root       42430   42373  0 16:47 pts/0    00:00:00 grep --color=auto ssh
[root@localhost /]# ps -ef | grep sshd
root        1130       1  0 12:08 ?        00:00:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups
root       42436   42373  0 16:47 pts/0    00:00:00 grep --color=auto sshd

2) 프로세스(데몬)을 중지 하면 (# systemctl stop sshd)

[root@localhost /]# systemctl stop sshd
[root@localhost /]# ps -ef | grep sshd
root       42462   42373  0 16:49 pts/0    00:00:00 grep --color=auto sshd

[root@localhost /]# ps -ef | grep -v grep | grep sshd
-> grep 이라는 글자를 제외하고 나한테 보여줘

3) 프로세스(데몬)을 실행 하면 
(# systemctl start sshd) 접속 가능


[root@localhost /]# systemctl start sshd
[root@localhost /]# netstat -r
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
default         _gateway        0.0.0.0         UG        0 0          0 ens160
172.16.153.0    0.0.0.0         255.255.255.0   U         0 0          0 ens160
[root@localhost /]# dnf install telnet-server -y

[root@localhost /]# systemctl start telnet.socket

[root@localhost /
]# firewall-cmd --list-all (방화벽 정책 출력)
- 리눅스 방화벽(Kernel(netfilter))
- 유틸리티 : iptables, firewalld (redhat), ufw (ubuntu)

[root@localhost /]
# firewall-cmd --permanent --add-service=telnet
(텔넬 포트 오픈)
success
[root@localhost /]
# firewall-cmd --reload
(방화벽 정책 다시 일기)
success

[root@localhost /]# 
[root@localhost /]# ps -ef | grep sshd
root       42503       1  0 16:52 ?        00:00:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups
root       42851   42503  0 17:19 ?        00:00:00 sshd: roror [priv]
roror      42857   42851  0 17:19 ?        00:00:00 sshd: roror@pts/1
root       42942   42373  0 17:24 pts/0    00:00:00 grep --color=auto sshd
[root@localhost /]# ps -ef | grep telnet
root       42948   42373  0 17:24 pts/0    00:00:00 grep --color=auto telnet
[root@localhost /]# 
[root@localhost /]# 
[root@localhost /]# 
[root@localhost /]# ps -ef | grep sshd
root       42503       1  0 16:52 ?        00:00:00 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups
root       42851   42503  0 17:19 ?        00:00:00 sshd: roror [priv]
roror      42857   42851  0 17:19 ?        00:00:00 sshd: roror@pts/1
root       42967   42373  0 17:24 pts/0    00:00:00 grep --color=auto sshd
[root@localhost /]# systemctl stop sshd
[root@localhost /]# systemctl disable sshd
Removed "/etc/systemd/system/multi-user.target.wants/sshd.service".
[root@localhost /]# systemctl start sshd.socket
[root@localhost /]# systemctl enable sshd.socket
Created symlink /etc/systemd/system/sockets.target.wants/sshd.socket → /usr/lib/systemd/system/sshd.socket.

[root@localhost /]# ps -ef | grep -v grep | grep sshd
root       42851       1  0 17:19 ?        00:00:00 sshd: roror [priv]
roror      42857   42851  0 17:19 ?        00:00:00 sshd: roror@pts/1



기존(init(PID(1) -process id))  ----> systemd(PID 1)
- systemd 부모 프로세스이다.

xinetd -----> systemd(socket)

xinetd(ftp, ssh, telnet)
standalone(web, DB)

[root@localhost /]# pstree -p | more
systemd(1)-+-ModemManager(999)-+-{ModemManager(1005)
........

-> systemd(1) : 부모프로세스


[root@localhost /]# 
[root@localhost /]# systemctl stop sshd.socket
[root@localhost /]# systemctl disable sshd.socket
Removed "/etc/systemd/system/sockets.target.wants/sshd.socket".
[root@localhost /]# systemctl start sshd.service
[root@localhost /]# 




-------------------------------------------------------
# well-known port 0 ~ 1023 # (수정불가)
# 관리자 포트
21 - ftp
22 - ssh
23 - telnet
25 - smtp(메일)
53 - dns(도메인)
80 - http
443 - https
3306 - MySQL
8080 - tomcat









